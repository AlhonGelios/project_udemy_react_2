{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","hieght","objectFit","src","img","alt","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","clearInterval","timerId","errorMessage","spinner","content","onClick","mjolnir","Component","View","clazz","transformThumbnail","length","slice","transformDescr","CharList","newItemLoading","charEnded","onRequest","newChar","ended","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","i","imgStyle","props","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","prevState","skeleton","resourceURI","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dd4d6e1.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/'\n    _apiKey = 'apikey=8bcda954dcf2e6176c3a8548182f80cf'\n    _baseOffset = 210\n\n\n    getResource = async (url) => {\n        let res = await fetch(url)\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\n        }\n\n        return await res.json()\n    }\n\n\n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`)\n        return res.data.results.map(this._transformCharacter)\n    }\n\n    getCharacter = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?&${this._apiKey}`)\n        return this._transformCharacter(res.data.results[0])\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description,\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n}\n\nexport default MarvelService","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: \"block\", width:\"250px\", hieght: \"250px\", objectFit: 'contain', margin: \"0 auto\"}} src={img} alt='error 404 not found'/>\n    )\n}\n\nexport default ErrorMessage","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react/cjs/react.production.min';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService()\n\n    componentDidMount() {\n\n        this.updateChar()\n        // this.timerId = setInterval(this.updateChar, 8000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId)\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\n        this.onCharLoading()\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    render() {\n        const {char, loading, error} = this.state\n        const errorMessage = error ? <ErrorMessage/> : null\n        const spinner = loading ? <Spinner/> : null\n        const content = !(loading || error) ? <View char={char}/> : null\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={this.updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n\n    const {name, description, thumbnail, homepage, wiki} = char\n\n    const transformDescr = (description) => {\n        if (!description) {\n            return 'description not found'\n        }\n\n        if (description.length > 200) {\n            return description.slice(0, 200) + '...'\n        }\n\n        return description\n    }\n\n    const transformThumbnail = (thumbnail) => {\n        const clazz = \"randomchar__img\"\n\n        if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n            return `${clazz} ${clazz}_notFound`\n        } return clazz\n    }\n\n    return (\n\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className={transformThumbnail(thumbnail)}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{transformDescr(description)}</p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n    state = {\n        char: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService()\n\n    componentDidMount() {\n        this.onRequest()\n    }\n\n    onRequest = (offset) => {\n        this.onCharLoading()\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharLoaded = (newChar) => {\n        let ended = false\n        if (newChar.length < 9) {\n            ended = true\n        }\n\n        this.setState(({char, offset}) => ({\n            char: [...char, ...newChar],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'}\n\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'}\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    key={item.id}\n                    ref={this.setRef}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id)\n                        this.focusOnItem(i)\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n        const {char, loading, error, newItemLoading, offset, charEnded} = this.state\n\n        const items = this.renderItems(char)\n\n        const errorMessage = error ? <ErrorMessage/> : null\n        const spinner = loading ? <Spinner/> : null\n        const content = !(loading || error) ? items : null\n\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button\n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MarvelService from '../../services/MarvelService';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton'\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService()\n\n    componentDidMount() {\n        this.updateChar()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar()\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props\n        if (!charId) {\n            return\n        }\n\n        this.onCharLoading()\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n        const {char, loading, error} = this.state\n\n        const skeleton = char || loading || error ? null : <Skeleton/>\n        const errorMessage = error ? <ErrorMessage/> : null\n        const spinner = loading ? <Spinner/> : null\n        const content = !(loading || error || !char) ? <View char={char}/> : null\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char\n    let imgStyle = {'objectFit' : 'cover'}\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'}\n    }\n\n    const transformDescr = (description) => {\n        if (!description) {\n            return 'description not found'\n        }\n\n        return description\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">Homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">{transformDescr(description)}</div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        return(\n                            <li key={i} className=\"char__comics-item\">\n                                <a href= {item.resourceURI}>{item.name}</a>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo)\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}